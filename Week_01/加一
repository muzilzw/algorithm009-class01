描述：
给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。

最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。

你可以假设除了整数 0 之外，这个整数不会以零开头。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/plus-one
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
    public int[] plusOne(int[] digits) {
        // int n = digits.length-1;
        // long nums = 0;
        // for (int i : digits){
        //     nums += n == 0 ? i+1 : i*Math.pow(10,n);
        //     n--;
        // }
        // String[] numStr = String.valueOf(nums).split("");
        // int[] numsArr = new int[numStr.length];
        // for (int j=0; j<numStr.length; j++){
        //     numsArr[j] = Integer.parseInt(numStr[j]);
        // }
        Stack<Integer> numStack = new Stack<> ();
        Stack<Integer> numStack2 = new Stack<> ();
        for (int i : digits){
            numStack.push(i);
        }
        int len = numStack.size();
        int tmp = 0;
        for (int j=0; j< len; j++){
            int m=0;
            if (j==0){
                m += numStack.pop() + 1;
            }else{
                m += numStack.pop();
            }
            m+=tmp;
            if (m >= 10){
                numStack2.push(m%10);
            }else{
                numStack2.push(m);
            }
            tmp = m/10;
        }
        if (tmp == 1){
            numStack2.push(tmp);
        }
        int[] numsArr = new int[numStack2.size()];
        int l = numStack2.size();
        for (int x=0; x<l; x++){
            numsArr[x] = numStack2.pop();
        }
        return numsArr;
    }
}
